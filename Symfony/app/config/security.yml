security:
    encoders:
        Symfony\Component\Security\Core\User\User: plaintext

    role_hierarchy:
        # Un admin hérite des droits d'auteur et de modérateur      
        ROLE_ADMIN:       [ROLE_AUTEUR, ROLE_MODERATEUR]       
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH] 
        # On garde ce rôle superadmin, il nous resservira par la suite

    providers:
        in_memory:
            memory:
                users:
                    user:  { password: userpass, roles: [ 'ROLE_USER' ] }
                    admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }

    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false
        
        main_login:
        # prendre /login (mais pas /login_check !)
        pattern:   ^/login$
        # On autorise alors les anonymes sur ce pare-feu
        anonymous: true 

                
        # Mise en place d'un parefeu (anonymous: true = tout les utilisateurs)  
        main:
            pattern:   ^/
            anonymous: true
            provider:  in_memory
            form_login:
              #route login
                login_path: login
              #route de validation du formulaire de connexion
                check_path: login_check
            logout:
              #rend possible la déconnexion
                path:   logout
                #URL vers laquelle sera redirigé le visiteur après sa déconnexion
                target: /{slug}


    access_control:
        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        
        # sécuriser URL par IP ou par canal (http ou https)
        #- { path: ^/admin, roles: ROLE_ADMIN, ip: 127.0.0.1, requires_channel: https }
